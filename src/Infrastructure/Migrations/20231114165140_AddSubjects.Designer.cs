// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(LmsDbContext))]
    [Migration("20231114165140_AddSubjects")]
    partial class AddSubjects
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Group", b =>
                {
                    b.Property<Guid>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("GroupId");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            GroupId = new Guid("55e24f9c-18f4-4b94-b946-35ac8f71831c"),
                            Department = "Computer Science",
                            Name = "Group A"
                        },
                        new
                        {
                            GroupId = new Guid("f8c489f2-30ba-4c87-a2b1-9e746fa445cc"),
                            Department = "Electrical Engineering",
                            Name = "Group B"
                        },
                        new
                        {
                            GroupId = new Guid("1ee68487-561c-413a-bd9e-eb1b47b308d0"),
                            Department = "Mechanical Engineering",
                            Name = "Group C"
                        },
                        new
                        {
                            GroupId = new Guid("a4204827-10cc-4104-99d0-bd0cdcaf14ff"),
                            Department = "Physics",
                            Name = "Group D"
                        },
                        new
                        {
                            GroupId = new Guid("34df5e16-707d-4c48-8d79-c72634547ecc"),
                            Department = "Mathematics",
                            Name = "Group E"
                        },
                        new
                        {
                            GroupId = new Guid("bcf40c82-e978-4337-91e4-8e889a045180"),
                            Department = "Chemistry",
                            Name = "Group F"
                        },
                        new
                        {
                            GroupId = new Guid("b02f971c-0604-48bd-8a5e-8e6b9c983437"),
                            Department = "Biology",
                            Name = "Group G"
                        },
                        new
                        {
                            GroupId = new Guid("70e1f044-98a1-4557-a964-f049773f79b8"),
                            Department = "Civil Engineering",
                            Name = "Group H"
                        },
                        new
                        {
                            GroupId = new Guid("2c866674-5c28-49e6-9894-9c43ad33ef81"),
                            Department = "Environmental Science",
                            Name = "Group I"
                        },
                        new
                        {
                            GroupId = new Guid("ac86f4cd-f829-4fd6-a6f3-b33c3236776b"),
                            Department = "Information Technology",
                            Name = "Group J"
                        },
                        new
                        {
                            GroupId = new Guid("53399b0d-6e71-4e56-a0e4-65224877880f"),
                            Department = "Aerospace Engineering",
                            Name = "Group K"
                        });
                });

            modelBuilder.Entity("Domain.Entities.GroupSubject", b =>
                {
                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.HasKey("SubjectId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupSubjects");
                });

            modelBuilder.Entity("Domain.Entities.Lecturer", b =>
                {
                    b.Property<Guid>("LecturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Degree")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("LecturerId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Lecturers");
                });

            modelBuilder.Entity("Domain.Entities.LecturerSubject", b =>
                {
                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LecturerId")
                        .HasColumnType("uuid");

                    b.HasKey("SubjectId", "LecturerId");

                    b.HasIndex("LecturerId");

                    b.ToTable("LecturerSubjects");
                });

            modelBuilder.Entity("Domain.Entities.Student", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("StudentId");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Domain.Entities.Subject", b =>
                {
                    b.Property<Guid>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SubjectId");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(319)
                        .HasColumnType("character varying(319)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Entities.GroupSubject", b =>
                {
                    b.HasOne("Domain.Entities.Group", "Group")
                        .WithMany("GroupSubjects")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Subject", "Subject")
                        .WithMany("GroupSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Domain.Entities.Lecturer", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithOne("Lecturer")
                        .HasForeignKey("Domain.Entities.Lecturer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.LecturerSubject", b =>
                {
                    b.HasOne("Domain.Entities.Lecturer", "Lecturer")
                        .WithMany("LecturerSubjects")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Subject", "Subject")
                        .WithMany("LecturerSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Domain.Entities.Student", b =>
                {
                    b.HasOne("Domain.Entities.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("Domain.Entities.Student", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Group", b =>
                {
                    b.Navigation("GroupSubjects");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Domain.Entities.Lecturer", b =>
                {
                    b.Navigation("LecturerSubjects");
                });

            modelBuilder.Entity("Domain.Entities.Subject", b =>
                {
                    b.Navigation("GroupSubjects");

                    b.Navigation("LecturerSubjects");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Lecturer");

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
